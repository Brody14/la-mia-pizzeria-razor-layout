@{
    ViewData["Title"] = "Home Page";
}

<div>
    <p>
        1. Dichiarare una variabile valorizzandola con il nostro nome.
        Dichiarare un'altra variabile valorizzandola con il nostro cognome.
        Stampare il nostro nome e cognome all'interno di un tag h2.
    </p>

    @{
        string name = "Stefania";
        string lastName = "Spina";
    }

    <h2>@name @lastName</h2>

</div>

<div>
    <p>
        2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso) <br />
        Stampare dentro uno span il risultato.
    </p>
    @{
        int PrintSumNumbers(int n)
        {
            int somma = 0;
            for (int i = 1; i <= n; i++)
            {
                somma += i;
            }
            return somma;
        }
    }
    <span> La somma dei numeri che vanno da 1 a 9 è: @PrintSumNumbers(9)</span>
</div>

<div>
    <p>
        3. Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina
    </p>
    @{

        int CountAFrequency(string phrase)
        {
            int count = 0;
            for (int i = 0; i < phrase.Length; i++)
            {
                if (phrase[i] == 'a')
                {
                    count++;
                }
            }
            return count;
        }
    }

    <p> Nella frase "nel mezzo del cammin di nostra vita" la lettera a è contenuta @CountAFrequency("nel mezzo del cammin di nostra vita") volte </p>

</div>

<div>
    <p>
        4. Creare una List<int> di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e mostrare in pagina solo i numeri compresi tra 20 e 70
    </p>

    @{
        List<int> numbers = new List<int>();

        Random ran = new Random();

        for(int i = 0; i < 20; i++)
        {
            int num = ran.Next(1, 91);
            numbers.Add(num);
        }
    }

    @foreach(int num in numbers)
    {
        @if(num >= 20 && num <= 70)
        {
            <span>@num</span>
        }
    }

</div>

<div>
    <p>
        5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) con il formato anno-mese-giorno ore:minuti:secondi
    </p>

    <span>Date e ora attuale: @DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss")</span>

</div>

<div>
    <p>
        6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina
        a. la data di 7 giorni fa
        b. che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
        c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
    </p>

    @{
        DateTime date = DateTime.Now;
        DateTime aWeekAgo = date.AddDays(-7);
        DateTime afterAYear = date.AddYears(1);
    }

    <ul>
        <li>La data di oggi: @date.ToString("dd/MM/yyyy")</li>
        <li>La data di 7 giorni fa: @aWeekAgo.ToString("dd/MM/yyyy")</li>
        <li>Oggi è @date.ToString("dddd")</li>
        <li>Il @afterAYear.ToString("dd/MM/yyyy") sarà @afterAYear.ToString("dddd")</li>
    </ul>
  
</div>



